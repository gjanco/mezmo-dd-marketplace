name: Validations

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  validations-core:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Upgrade Python packaging tools
      run: |
        pip install --disable-pip-version-check --upgrade pip setuptools wheel

    - name: Install ddev
      run: |
        pip install "datadog-checks-dev[cli]"

    - name: Configure ddev and CI
      id: configure_ddev
      run: |
        ddev config set repos.marketplace .
        ddev config set repo marketplace
        ddev config set orgs.ci.dd_url "https://app.datadoghq.com"
        ddev config set org ci
        ddev ci setup

    - name: Validate CI
      if: ${{ steps.configure_ddev.conclusion == 'success' }}
      run: |
        ddev validate ci

    - name: Validate CODEOWNERS
      if: ${{ steps.configure_ddev.conclusion == 'success' }}
      run: |
        ddev validate codeowners

    - name: Validate configuration
      id: validate_config
      if: ${{ steps.configure_ddev.conclusion == 'success' }}
      run: |
        ddev validate config changed

    - name: Validate configuration models
      if: ${{ steps.validate_config.conclusion == 'success' }}
      run: |
        ddev validate models changed

    - name: Validate dashboards
      if: ${{ steps.configure_ddev.conclusion == 'success' }}
      run: |
        ddev validate dashboards changed

    - name: Validate manifests
      if: ${{ steps.configure_ddev.conclusion == 'success' }}
      run: |
        ddev validate manifest changed

    - name: Validate metadata
      if: ${{ steps.configure_ddev.conclusion == 'success' }}
      run: |
        ddev validate metadata changed

    - name: Validate READMEs
      if: ${{ steps.configure_ddev.conclusion == 'success' }}
      run: |
        ddev validate readmes changed

    - name: Validate recommended-monitors
      if: ${{ steps.configure_ddev.conclusion == 'success' }}
      run: |
        ddev validate recommended-monitors changed

    - name: Validate saved-views
      if: ${{ steps.configure_ddev.conclusion == 'success' }}
      run: |
        ddev validate saved-views changed

    - name: Validate service-checks
      if: ${{ steps.configure_ddev.conclusion == 'success' }}
      run: |
        ddev validate service-checks changed

    - name: Validate imports
      if: ${{ steps.configure_ddev.conclusion == 'success' }}
      run: |
        ddev validate imports changed

    - name: Validate package
      if: ${{ steps.configure_ddev.conclusion == 'success' }}
      run: |
        ddev validate package changed

    - name: Validate JMX-metrics
      if: ${{ steps.configure_ddev.conclusion == 'success' }}
      run: |
        ddev validate jmx-metrics changed

    - name: Validate EULA
      if: ${{ steps.configure_ddev.conclusion == 'success' }}
      run: |
        ddev validate eula

    - name: Comment PR on failure
      if: ${{ failure() && github.event.pull_request.merged != true }}
      uses: actions/github-script@0.3.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { issue: { number: issue_number }, repo: { owner, repo }  } = context;
          github.issues.createComment({ issue_number, owner, repo, body: "The `validations-core` job has failed; please review the `Files changed` tab for possible suggestions to resolve." });

  validations-marketplace:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Upgrade Python packaging tools
      run: |
        pip install --disable-pip-version-check --upgrade pip setuptools wheel

    - name: Install dependencies and ddev
      id: dep-install
      run: |
        pip install PyGithub
        pip install Pillow
        pip install datadog-checks-dev[cli]

    - name: Run exhaustive V2 manifest media validations
      if: ${{ steps.dep-install.conclusion == 'success' }}
      run: python .github/workflows/scripts/v2-media-validations.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Comment PR on failure
      if: ${{ failure() && github.event.pull_request.merged != true }}
      uses: actions/github-script@0.3.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { issue: { number: issue_number }, repo: { owner, repo }  } = context;
          github.issues.createComment({ issue_number, owner, repo, body: "The `validations-marketplace` job has failed; please review the `Files changed` tab for possible suggestions to resolve." });
